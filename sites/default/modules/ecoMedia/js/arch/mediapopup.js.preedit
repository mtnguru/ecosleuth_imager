(function ($) {
  Drupal.behaviors.mediapopup = {
    attach: function (context, settings) {
      var $messages  = $('#messages');
      var images = new Array();
      var nimages = 0;
      var mode = 0; // 0 view, 1 edit
      var $image;
      var $imageOverlay;
      var newImage;
      var dkrm;

      // highlight the entire background when vbo-select changes
//    $('.vbo-select').change(function () {
//      if ($(this).attr('checked')) {
//        $(this).parent().parent().parent().parent().addClass('checked');
//      } else {
//        $(this).parent().parent().parent().parent().removeClass('checked');
//      }
//    });

      $('.ds-images .views-row').click(function () {
        var $select = $(this).find('.vbo-select');
        if ($select.attr('checked')) {
          $select.attr('checked',false);
          $(this).removeClass('checked');
        } else {
          $select.attr('checked',true);
          $(this).addClass('checked');
        }
      });
      $('.ds-images a').click(function(ev) {
        console.debug(".ds-images a -  click");
        ev.stopPropagation();
      });

      function setMode(newmode) {
        mode = newmode;
        if (newmode) {
          $('#modebuttons #mode-edit').addClass('checked');
          $('#modebuttons #mode-view').removeClass('checked');
        } else {
          $('#modebuttons #mode-edit').removeClass('checked');
          $('#modebuttons #mode-view').addClass('checked');
        }
      };

      function findImage(src,offset) {
        for(i=0; i < nimages; i++) {
          if (src == images[i]) {
            if (offset == 1) {
              if (++i == nimages) i = 0;
            } else {
              if (--i == -1) i = nimages-1;
            }
            return images[i];
          }
        }
        return;
      };

      function dispImage(src,ev) {
        newImage = new Image(); // create the new image
        newImage.src = src;     // This preloads the image
        $image.unbind('load');              // unbind any previous load handlers
        $image.attr('src',src);   // This sets the image to display
        $image.load(function() {  // wait for the image to load
          if (iw == 0) return;
          var iw = $image.width();
          var ih = $image.height();
          var dw = $(window).width() - 400;
          var dh = $(window).height() - 30;
//        var dw = $(window).width() - 400;
//        var dh = $(window).height() - 100;
          var nw = newImage.width;
          var nh = newImage.height;
             
          var fh;
          var fw;
          if ((fh = nh*dw/nw) < dh) {   // If width is the limiter
            fw = dw;
          } else {               // Set the image based on max height
            fh = dh;
            fw = nw*dh/nh;
          }
          $image.attr('width', fw);
          $image.attr('height',fh);

/*
        dkrm = new Darkroom('#image', {   // Creates a new Darkroom with every image, not good.
          // Size options
          minWidth: 100,
          minHeight: 100,
        
          plugins: {
            //save: false,
            crop: {
              minHeight: 50,
              minWidth: 50,
              ratio: 1
            }
          },
          init: function() {
            var cropPlugin = this.getPlugin('crop');
            cropPlugin.selectZone(170, 25, 500, 500);
    //      cropPlugin.requireFocus();
          }
        }); 

          dkrm.options.maxWidth = fw;
          dkrm.options.maxHeight = fh; */
//        alert('image ' + nw + 'x' + nh + 
//              '\ncurrent image ' + iw + 'x' + ih + 
//              '\nnew size ' + fw + 'x' + fh +
//              '\nwindow size ' + dw + 'x' + dh);
          if (ev) {
            if (ev.pageX < dw / 2) {
              $imageOverlay.addClass('right');
            } else {
              $imageOverlay.removeClass('right');
            }
          }
          $imageOverlay.removeClass('hide');
        });
      };


      function initImages() {
        // Create a list of images on the screen
           
        // Add the imageOverlay div and img to page
        // This would be best done in Drupal by modifying the form 
        $('#page').append('<div id="image-overlay" class="hide">' +
                            '<div id="popupbuttons">' + 
                              '<div id="imagebuttons">' + 
                                '<div>Image</div>' +
                                '<img id="image-left" src="/sites/all/icons/left_arrow.png"></img><br>' + 
                                '<img id="image-right" src="/sites/all/icons/right_arrow.png"></img><br>' + 
                              '</div>' +
                              '<div id="modebuttons">' + 
                                '<div>Mode</div>' +
                                '<img id="mode-view" class="checked" src="/sites/all/icons/eye.png"></img><br>' + 
                                '<img id="mode-edit" src="/sites/all/icons/frame.png"></img><br>' + 
                              '</div>' +
                              '<div id="viewbuttons">' + 
                                '<div>View</div>' +
                                '<img id="view-zoom" src="/sites/all/icons/zoom.png"></img><br>' + 
                                '<img id="view-zoomin" src="/sites/all/icons/zoomin.png"></img><br>' + 
                                '<img id="view-zoomout" src="/sites/all/icons/zoomout.png"></img><br>' + 
                              '</div>' +
                              '<div id="editbuttons">' + 
                                '<div>Edit</div>' +
                                '<img id="edit-crop" src="/sites/all/icons/scissors.png"></img><br>' + 
                                '<img id="edit-scale" src="/sites/all/icons/scale.png"></img><br>' + 
                                '<img id="edit-color" src="/sites/all/icons/color_wheel.png"></img><br>' + 
                                '<img id="edit-left" src="/sites/all/icons/rotate-left.png"></img><br>' + 
                                '<img id="edit-right" src="/sites/all/icons/rotate-right.png"></img>' + 
                              '</div>' + 
                              '<div id="filebuttons">' + 
                                '<div>File</div>' +
                                '<img id="file-view" src="/sites/all/icons/view.png"></img><br>' + 
                                '<img id="file-edit" src="/sites/all/icons/edit.png"></img><br>' + 
                                '<img id="file-delete" src="/sites/all/icons/delete.png"></img><br>' + 
                                '<img id="file-download" src="/sites/all/icons/download.png"></img><br>' + 
                                '<img id="file-save" src="/sites/all/icons/floppy.png"></img><br>' + 
                              '</div>' +
                            '</div>' + 
                            '<img id="image" src="#"></img>' +
                          '</div>');


        $imageOverlay = $('#image-overlay');
        $image = $('#image-overlay #image');
        // click on #image-overlay - hide it, set mode back to view=0
        $imageOverlay.click(function () {
          console.debug("#image-overlay - click");
          $(this).addClass('hide');
          setMode(0);
        });
        // mouse enters the #image-overlay div - do nothing
        $imageOverlay.mouseenter(function() {
          console.debug('#image-overlay mouseenter');
        });
        // mouse leaves the #image-overlay div - hide it
        $imageOverlay.mouseleave(function() {
          console.debug('#image-overlay mouseleave');
          if (mode) return false;
          $(this).addClass('hide');
        });
        // click on #image-left - bring up next image to the left
        $('#image-left').click(function() {
          console.debug('#image-left click');
          setMode(1);
          dispImage(findImage($image.attr('src'),-1));
        });
        // click on #image-right - bring up next image to the right
        $('#image-right').click(function() {
          console.debug('#image-right click');
          setMode(1);
          dispImage(findImage($image.attr('src'),1));
        });
        // click on #mode-view - set mode back to view=0
        $('#mode-view').click(function() {
          setMode(0);
        });
        // click on #mode-view - set mode to edit=1
        $('#mode-edit').click(function() {
          setMode(1);
        });

        // stop propogation of buttons from reaching #image-overlay
        $('#popupbuttons').click(function (ev) {
          ev.stopPropagation();
        });

        // cycle through each thumbnail on the page that has the 
        // css selector: .views-row a img
//      $('.views-row a img').each(function(index,value) {   // Find all .views-rows's that have a link <a> and an image <img>
        $('.image-style-ds-thumbnail').each(function(index,value) {   // Find all .views-rows's that have a link <a> and an image <img>
          images[nimages++] = $(this).parent().attr('href'); // the parent element MUST be a link to the image to load
          $(this).parent().unbind('click');
          // When user clicks on a thumbnail, set program to ignore mouseleave event
          $(this).click(function() {
            if (mode == 1) {
              setMode(0);
            } else {
              setMode(1);
            }
            return false;
          });
          $(this).parent().click(function() {
            setMode(1);
            return false;
          });

          // when the mouse enters a thumbnail image
          // un-hide div#image-overlay and display new image
          $(this).mouseenter(function(ev) {
            if (mode) return false;
            var src = $(this).parent().attr('href'); // the parent element MUST be a link to the image to load
//          src = src.replace(/\/styles\/ds_thumbnail\/public/,'');
            console.debug("image mouseenter " + src);
            $image.stop();                      // if an image is already loading stop it
            setMode(0);
            dispImage(src,ev);
            return false;   // don't follow the link
          });

          // When the mouse leaves if the destination is NOT the #image
          // or it's parent div #image-overlay
          $(this).mouseleave(function(ev) {
            if (mode) return false;
            var el = ev.relatedTarget ? ev.relatedTarget : ev.toElement;
            // Is there a better way to check if the next element is an
            // ancestor of the item with focus next?  This checks next item and 2 parents
            if (el == $imageOverlay[0] || el.parentNode == $imageOverlay[0] || el.parentNode.parentNode == $imageOverlay[0]) {
              console.debug("image mouseleave image has focus");
            } else {
              $imageOverlay.addClass('hide');
              setMode(0);
              console.debug("image mouseleave image doesn't have focus ");
            }
            return false;   // don't follow the link
          });
        });

//      var msg = "";
//      for (i=0; i < nimages; i++) {
//        msg += 'file ' + images[i] + '\n';
//      }
//      alert(msg);

      }

      initImages();
    }
  } 
})(jQuery);
